@model IEnumerable<MVCPractical.Employee>

@{
    Layout = null;
}
<link href="@Url.Content("~/Content/Site.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Content/bootstrap.css")" rel="stylesheet" type="text/css" />
<link href="@Url.Content("~/Scripts/jquery-ui.css")" rel="stylesheet" type="text/css" />

<div style="padding:7px 0;">
    <a id="ADDEmployee" class="ui-button ui-widget ui-corner-all" href="..\EmployeeInfo\Create">Add New Employee</a>
</div>
<div class="table-responsive">
    @*<input type="text" id="searchTerm" class="search_box" onkeyup="doSearch()" />*@
    <input type="text" id="myInput" onkeyup="myFunction()" placeholder="Search for names..">
    <p>
        @using (Html.BeginForm())
        {
        <p>
            Name: @Html.TextBox("searchstring")
            <input type="submit" value="Filter" />
        </p>
        }
        </p>

        <table id="dataTable" class="table table-striped table-bordered table-hover table-condensed" 
               style="border:1px;border-style:dotted;width:95%;">
            <thead>
                <tr>
                    <th>Action</th>
                    <th>
                        @Html.DisplayNameFor(model => model.EmpName)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Gender)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Birthdate)
                    </th>
                    <th>
                        @Html.DisplayName("Age")
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Email)
                    </th>
                    <th>
                        @Html.DisplayName("Address")
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Salary)
                    </th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
            {
                    <tr>
                        <td>
                            @Html.ActionLink("Edit", "Edit", new { EmpID = item.EmpID }, new { @class = "editDialog" })
                            |
                            @Html.ActionLink("Delete", "Delete", new { EmpID = item.EmpID }, new { @class = "confirmDialog" })

                        </td>
                        <td>

                            @Html.ActionLink((string)item.EmpName, "ViewEmployeeDetail", new { EmpID = item.EmpID }, new { @class = "viewDialog" })
                        </td>
                        <td>
                            @item.Gender
                        </td>
                        <td>
                            @if (item.Birthdate.HasValue)
                            {
                                @item.Birthdate.Value.ToString("MM/dd/yyyy")
                            }
                        </td>
                        <td>
                            @*<input type="text" onblur="calcAge(@item.Birthdate;)" />*@
                            @{
                                var age = 0;
                                if (item.Birthdate != null)
                                {
                                    age = (DateTime.Today.Year - item.Birthdate.Value.Year);
                                }
                            }

                            @age
                        </td>
                        <td>
                            @item.Email
                        </td>

                        <td>
                            @{string strFullAddress = item.Address1 + ", " + item.Address2 + ", " + item.City + ", " + item.State + ", " + item.Country + ", " + item.ZipCode + ". ";


                            }
                            @strFullAddress

                        </td>
                        <td style="text-align:right">
                            @item.Salary
                        </td>

                    </tr>
                                }
            </tbody>
        </table>
    </div>
    <div id="dialog-confirm" style="display: none">
        <p>
            <span class="ui-icon ui-icon-alert" style="float: left; margin: 0 7px 20px 0;"></span>
            Would you like to remove record permanently? 
        </p>
    </div>
    <div id="dialog-edit" style="display: none">
    </div>
    <div id="dialog-view" style="display: none">
    </div>

    <link href="@Url.Content("~/Content/jquery-ui.min.css")" rel="stylesheet" type="text/css" />
    <script src="@Url.Content("~/Scripts/jquery-1.7.1.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.20.min.js")" type="text/javascript"></script>

    <script type="text/javascript">
        function getAge(dateString) {
            var today = new Date();
            var birthDate = new Date(dateString);
            var age = today.getFullYear() - birthDate.getFullYear();
            var m = today.getMonth() - birthDate.getMonth();
            if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
                age--;
            }
            return age;
        }

        $(document).ready(function () {
            //var w = $(window).width();
            //var h = $(window).height();
            var w = 800;
            var h = 400;


            $("#ADDEmployee").live("click", function (e) {
                var url = $(this).attr('href');
                $("#dialog-edit").dialog({
                    title: 'Add New Employee',
                    autoOpen: false,
                    resizable: false,
                    height: h,
                    width: w,
                    show: { effect: 'drop', direction: "up" },
                    modal: true,
                    draggable: true,
                    open: function (event, ui) {
                        $(this).load(url);

                    },
                    close: function (event, ui) {
                        $(this).dialog('close');
                    }
                });

                $("#dialog-edit").dialog('open');
                return false;
            });

            $(".editDialog").live("click", function (e) {
                var url = $(this).attr('href');
                $("#dialog-edit").dialog({
                    title: 'Edit Employee -',
                    autoOpen: false,
                    resizable: false,
                    height: h,
                    width: w,
                    show: { effect: 'drop', direction: "up" },
                    modal: true,
                    draggable: true,
                    open: function (event, ui) {
                        $(this).load(url);

                    },
                    close: function (event, ui) {
                        $(this).dialog('close');
                    }
                });

                $("#dialog-edit").dialog('open');
                return false;
            });

            $(".confirmDialog").live("click", function (e) {
                var url = $(this).attr('href');

                $("#dialog-confirm").dialog({
                    autoOpen: false,
                    resizable: false,
                    height: 170,
                    width: 350,
                    show: { effect: 'drop', direction: "up" },
                    modal: true,
                    draggable: true,
                    buttons: {
                        "OK": function () {
                            $(this).dialog("close");
                            window.location = url;

                        },
                        "Cancel": function () {
                            $(this).dialog("close");

                        }
                    }
                });
                $("#dialog-confirm").dialog('open');
                return false;
            });

            $(".viewDialog").live("click", function (e) {
                var url = $(this).attr('href');
                $("#dialog-view").dialog({
                    title: 'Employee Detail',
                    autoOpen: false,
                    resizable: false,
                    height: h,
                    width: w,
                    show: { effect: 'drop', direction: "up" },
                    modal: true,
                    draggable: true,
                    open: function (event, ui) {
                        $(this).load(url);

                    },
                    buttons: {
                        "Close": function () {
                            $(this).dialog("close");

                        }
                    },
                    close: function (event, ui) {
                        $(this).dialog('close');
                    }
                });

                $("#dialog-view").dialog('open');
                return false;
            });

            $("#btncancel").live("click", function (e) {
                $("#dialog-edit").dialog('close');

            });
        });

        function myFunction() {
            // Declare variables
            var input, filter, table, tr, td, i;
            input = document.getElementById("myInput");
            filter = input.value.toUpperCase();
            table = document.getElementById("dataTable");
            tr = table.getElementsByTagName("tr");

            // Loop through all table rows, and hide those who don't match the search query
            for (i = 0; i < tr.length; i++) {
                td = tr[i].getElementsByTagName("td")[1];
                if (td) {
                    if (td.innerHTML.toUpperCase().indexOf(filter) > -1) {
                        tr[i].style.display = "";
                    } else {
                        tr[i].style.display = "none";
                    }
                }
            }
        }

        function doSearch() {
            var searchText = document.getElementById('searchTerm').value;
            var targetTable = document.getElementById('dataTable');
            var targetTableColCount;

            //Loop through table rows
            for (var rowIndex = 0; rowIndex < targetTable.rows.length; rowIndex++) {
                var rowData = '';

                //Get column count from header row
                if (rowIndex == 0) {
                    targetTableColCount = targetTable.rows.item(rowIndex).cells.length;
                    continue; //do not execute further code for header row.
                }

                //Process data rows. (rowIndex >= 1)
                for (var colIndex = 0; colIndex < targetTableColCount; colIndex++) {
                    rowData += targetTable.rows.item(rowIndex).cells.item(colIndex).textContent;
                }

                //If search term is not found in row data
                //then hide the row, else show
                if (rowData.indexOf(searchText) == -1)
                    targetTable.rows.item(rowIndex).style.display = 'none';
                else
                    targetTable.rows.item(rowIndex).style.display = 'table-row';
            }
        }
    </script>
